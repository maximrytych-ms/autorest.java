// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) AutoRest Code Generator.

package com.azure.language.textanalytics.models;

import com.azure.core.annotation.Immutable;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;

/** The TasksStateCounts model. */
@Immutable
public final class TasksStateCounts {
    /*
     * The completed property.
     */
    @JsonProperty(value = "completed", required = true, access = JsonProperty.Access.WRITE_ONLY)
    private long completed;

    /*
     * The failed property.
     */
    @JsonProperty(value = "failed", required = true, access = JsonProperty.Access.WRITE_ONLY)
    private long failed;

    /*
     * The inProgress property.
     */
    @JsonProperty(value = "inProgress", required = true, access = JsonProperty.Access.WRITE_ONLY)
    private long inProgress;

    /*
     * The total property.
     */
    @JsonProperty(value = "total", required = true, access = JsonProperty.Access.WRITE_ONLY)
    private long total;

    /*
     * The items property.
     */
    @JsonProperty(value = "items", access = JsonProperty.Access.WRITE_ONLY)
    private List<AnalyzeTextLROResult> items;

    /**
     * Creates an instance of TasksStateCounts class.
     *
     * @param completed the completed value to set.
     * @param failed the failed value to set.
     * @param inProgress the inProgress value to set.
     * @param total the total value to set.
     */
    @JsonCreator
    public TasksStateCounts(
            @JsonProperty(value = "completed", required = true, access = JsonProperty.Access.WRITE_ONLY) long completed,
            @JsonProperty(value = "failed", required = true, access = JsonProperty.Access.WRITE_ONLY) long failed,
            @JsonProperty(value = "inProgress", required = true, access = JsonProperty.Access.WRITE_ONLY)
                    long inProgress,
            @JsonProperty(value = "total", required = true, access = JsonProperty.Access.WRITE_ONLY) long total) {
        this.completed = completed;
        this.failed = failed;
        this.inProgress = inProgress;
        this.total = total;
    }

    /**
     * Get the completed property: The completed property.
     *
     * @return the completed value.
     */
    public long getCompleted() {
        return this.completed;
    }

    /**
     * Get the failed property: The failed property.
     *
     * @return the failed value.
     */
    public long getFailed() {
        return this.failed;
    }

    /**
     * Get the inProgress property: The inProgress property.
     *
     * @return the inProgress value.
     */
    public long getInProgress() {
        return this.inProgress;
    }

    /**
     * Get the total property: The total property.
     *
     * @return the total value.
     */
    public long getTotal() {
        return this.total;
    }

    /**
     * Get the items property: The items property.
     *
     * @return the items value.
     */
    public List<AnalyzeTextLROResult> getItems() {
        return this.items;
    }
}
